# =====================================================
# SCP传输部署环境配置 (deploy-fast 策略)
# 使用方式: cp env.scp.example .env
# 部署策略: 本地构建镜像 -> 导出压缩 -> SCP传输 -> 远程加载部署
# 端口配置: 前端 5173, 后端 5174
# =====================================================

# =================== 项目基础配置 ===================
PROJECT_NAME=multisig
IMAGE_TAG=latest

# Docker镜像仓库配置
# SCP传输模式: 本地构建镜像，不推送到远程仓库，直接通过SCP传输
# 使用本地标识符，避免与远程仓库冲突
DOCKER_REGISTRY=local


# =================== SCP传输配置 ===================
# SSH连接配置 (选择一种方式)

# 方式1: 使用SSH别名 (推荐，简单方便)
SSH_ALIAS_NAME=aliyun        # SSH别名名称，如果配置了~/.ssh/config中的Host别名
REMOTE_PATH=/opt/multisig    # 远程项目根目录

# 方式2: 传统SSH连接方式 (如果不使用别名，请取消注释下面的配置)
# REMOTE_HOST=your-server.com  # 阿里云服务器IP或域名
# REMOTE_USER=root             # SSH用户名
# REMOTE_PORT=22               # SSH端口
# REMOTE_PATH=/opt/multisig    # 远程项目根目录

# SSH密钥配置 (仅在不使用别名时需要)
# SSH_KEY_PATH=~/.ssh/id_rsa   # SSH私钥路径
# SSH_PASSWORD=your-password   # 或者使用密码认证 (不推荐)

# 镜像压缩配置
COMPRESSION_LEVEL=6          # gzip压缩级别 (1-9, 6为默认)
KEEP_LOCAL_IMAGES=true       # 传输后是否保留本地镜像文件

# =================== 部署模式配置 ===================
# 部署模式 (不启动本地数据库，使用云数据库)
# COMPOSE_PROFILES=

# =================== 数据库配置 (选择一种) ===================
# 选项1: 阿里云 RDS PostgreSQL (推荐，IPv4支持)
DB_HOST=pgm-xxxxxxxxx.pg.rds.aliyuncs.com
DB_PORT=5432
DB_NAME=multisig_db
DB_USER=your_username
DB_PASSWORD=your_password
DB_SSLMODE=require

# 选项2: Supabase PostgreSQL (免费版仅IPv6，可能连接困难)
# DB_HOST=db.todfbxlsbofxcagsxhix.supabase.co
# DB_PORT=5432
# DB_NAME=postgres
# DB_USER=postgres
# DB_PASSWORD=your-actual-supabase-password
# DB_SSLMODE=require

# =================== 应用端口配置 ===================
# 注意: 这里使用新的端口配置 (5173/5174)
BACKEND_PORT=5174
FRONTEND_PORT=5173
FRONTEND_HTTPS_PORT=443

# =================== 应用基础配置 ===================
# JWT 配置 (生产环境请修改)
JWT_SECRET=your-super-secret-jwt-key-change-in-production-please
JWT_EXPIRES_IN=24h

# 应用模式
GIN_MODE=release

# =================== Redis 配置 ===================
# Redis 缓存配置 (如果使用云Redis，请修改相应配置)
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=

# =================== 区块链配置 (选择一种) ===================

#  Sepolia 测试网配置
ETHEREUM_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/your-api-key
BLOCKCHAIN_WS_URL=wss://eth-sepolia.g.alchemy.com/v2/your-api-key
PRIVATE_KEY=your-private-key-for-gas-payments
SAFE_SERVICE_URL=https://safe-transaction-sepolia.safe.global

# =================== CORS 配置 ===================
# 请根据您的域名或公网IP修改 (注意: 后端使用 ALLOWED_ORIGINS)
# 支持多个域名，用逗号分隔 (仅HTTP，不支持HTTPS)
ALLOWED_ORIGINS=http://multisig.rapidbuildx.tech,http://120.25.3.128:5173,https://120.25.3.128:5173

# =================== 前端配置 ===================
FRONTEND_HOST=your-server-ip  # 替换为您的云服务器公网IP

# =================== 前端构建时环境变量 (选择对应网络) ===================
# 这些变量会在Docker构建阶段注入到前端应用中
# 使用域名访问，通过 nginx 代理到后端（注意：不要重复/api路径）
VITE_API_BASE_URL=http://multisig.rapidbuildx.tech
VITE_WS_URL=ws://multisig.rapidbuildx.tech/ws

# Sepolia 测试网前端配置 (取消注释使用)
VITE_CHAIN_ID=11155111
VITE_CHAIN_NAME=Sepolia
VITE_RPC_URL=https://sepolia.infura.io/v3/your-infura-key
VITE_BLOCK_EXPLORER=https://sepolia.etherscan.io
VITE_SAFE_SERVICE_URL=https://safe-transaction-sepolia.safe.global

# =================== 后端运行时环境变量 ===================
# 这些变量会在容器运行时传递给后端应用
PORT=8080

# =====================================================
# SCP传输部署策略说明
# =====================================================
# 1. 本地构建: 使用 build.sh 脚本构建镜像
# 2. 镜像导出: 使用 docker save 导出镜像为tar文件
# 3. 压缩传输: 使用 gzip 压缩并通过 scp 传输到远程服务器
# 4. 远程部署: 在服务器上解压缩并加载镜像，然后部署
# 5. 端口映射: 前端 5173, 后端 5174
# 6. 环境变量: 构建时注入前端变量，运行时注入后端变量
# 7. 数据库: 使用云数据库服务，无需本地 PostgreSQL
# =====================================================

# =====================================================
# 阿里云服务器配置建议
# =====================================================
# 1. 确保服务器已安装 Docker 和 Docker Compose
# 2. 创建镜像存储目录: mkdir -p /opt/multisig/images
# 3. 配置SSH密钥认证，避免密码认证
# 4. 确保服务器有足够的磁盘空间存储镜像文件
# 5. 配置防火墙开放必要端口 (5173, 5174, 22)
# =====================================================
